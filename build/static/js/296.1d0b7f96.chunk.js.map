{"version":3,"file":"static/js/296.1d0b7f96.chunk.js","mappings":"2JAIO,MAAMA,EAAcC,SAA0BC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAQ,UAAU,CAAEC,OAAQC,IAAOC,KAExFC,EAAaR,SAAcC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAQ,WAAAD,OAAUM,G,iCCNhE,MAAML,EAAW,sC,sFCGjB,MAAMM,EAAoBV,SAAkBC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAQ,kBAAAD,OAAiBQ,I,uCCCzF,MAkBA,EAlBaC,IAAmB,IAAlB,SAAEC,GAAUD,EACxB,OACEE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,UACvBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,UAAEE,EAAAA,EAAAA,GAAoBL,EAASM,UACzDL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWC,SAAEH,EAASO,WAElC,ECqCT,EAzCcC,KACZ,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,CAAC,IAElCf,GAAIE,IAAWkB,EAAAA,EAAAA,MAEjBC,GAAcC,EAAAA,EAAAA,cAAY/B,UAC9B0B,GAAa,SACPM,QAAQC,IAAI,CAACvB,EAAkBC,IAASH,EAAAA,EAAAA,GAAWG,KACtDuB,MAAMC,IACLZ,EAASY,EAAI,GAAGC,MAChBR,EAAYO,EAAI,GAAGC,KAAK,IAEzBC,SAAQ,IAAMX,GAAa,IAAO,GACpC,IAEGY,GAAgBC,EAAAA,EAAAA,UAAQ,IAChB,OAALjB,QAAK,IAALA,OAAK,EAALA,EAAOkB,KAAKC,IAAS3B,EAAAA,EAAAA,KAAC4B,EAAI,CAAe7B,SAAU4B,GAAnBA,EAAKhC,OAC3C,CAACa,IAMJ,OAJAqB,EAAAA,EAAAA,YAAU,KACRb,GAAa,GACZ,CAACA,KAGFhB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvBS,GACCX,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,KAEP3B,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA7B,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,OAAMC,SAAA,CAAC,WAAiB,OAARW,QAAQ,IAARA,OAAQ,EAARA,EAAUmB,KAAK,eAC7ChC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAEsB,UAI9B,C,iCC5CH,MAAMpB,EAAuB6B,GAClCA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,E","sources":["api/users.js","constants/api.js","api/posts.js","components/Post.jsx","pages/posts/Posts.jsx","utils/text-modifiers.js"],"sourcesContent":["import axios from 'axios'\nimport { BASE_URL } from '../constants/api'\nimport pickBy from 'lodash.pickby'\n\nexport const getAllUsers = async (queryVariables) => axios.get(`${BASE_URL}/users`, { params: pickBy(queryVariables) })\n\nexport const getOneUser = async (id) => axios.get(`${BASE_URL}/users/${id}`)\n","export const BASE_URL = 'https://jsonplaceholder.typicode.com'\n","import axios from 'axios'\nimport { BASE_URL } from '../constants/api'\n\nexport const getAllPostsByUser = async (userId) => axios.get(`${BASE_URL}/posts?userId=${userId}`)\n","import React from 'react'\nimport PT from 'prop-types'\nimport { capitalizeFirstWord } from '../utils/text-modifiers'\n\nconst Post = ({ postData }) => {\n  return (\n    <li className=\"card mb-4\">\n      <div className=\"card-body\">\n        <h2 className=\"card-title\">{capitalizeFirstWord(postData.title)}</h2>\n        <p className=\"card-text\">{postData.body}</p>\n      </div>\n    </li>\n  )\n}\n\nPost.propTypes = {\n  postData: PT.shape({\n    title: PT.string,\n    body: PT.string,\n  }),\n}\n\nexport default Post\n","import React, { useState, useCallback, useEffect, useMemo } from 'react'\nimport { getOneUser } from '../../api/users'\nimport { getAllPostsByUser } from '../../api/posts'\nimport { useParams } from 'react-router-dom'\nimport Loader from '../../ui-kit/components/loader/Loader'\nimport Post from '../../components/Post'\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [userData, setUserData] = useState({})\n\n  const { id: userId } = useParams()\n\n  const handleFetch = useCallback(async () => {\n    setIsLoading(true)\n    await Promise.all([getAllPostsByUser(userId), getOneUser(userId)])\n      .then((res) => {\n        setPosts(res[0].data)\n        setUserData(res[1].data)\n      })\n      .finally(() => setIsLoading(false))\n  }, [])\n\n  const renderContent = useMemo(() => {\n    return posts?.map((post) => <Post key={post.id} postData={post} />)\n  }, [posts])\n\n  useEffect(() => {\n    handleFetch()\n  }, [handleFetch])\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <h1 className=\"mb-4\">List of {userData?.name}`s posts</h1>\n          <div className=\"col\">\n            <ul className=\"list-group\">{renderContent}</ul>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Posts\n","export const capitalizeFirstWord = (str) =>\n  str.charAt(0).toUpperCase() + str.slice(1)\n"],"names":["getAllUsers","async","axios","get","concat","BASE_URL","params","pickBy","queryVariables","getOneUser","id","getAllPostsByUser","userId","_ref","postData","_jsx","className","children","_jsxs","capitalizeFirstWord","title","body","Posts","posts","setPosts","useState","isLoading","setIsLoading","userData","setUserData","useParams","handleFetch","useCallback","Promise","all","then","res","data","finally","renderContent","useMemo","map","post","Post","useEffect","Loader","_Fragment","name","str","charAt","toUpperCase","slice"],"sourceRoot":""}