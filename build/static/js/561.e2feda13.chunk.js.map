{"version":3,"file":"static/js/561.e2feda13.chunk.js","mappings":"2JAIO,MAAMA,EAAcC,SAA0BC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAQ,UAAU,CAAEC,OAAQC,IAAOC,KAExFC,EAAaR,SAAcC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAQ,WAAAD,OAAUM,G,iCCNhE,MAAML,EAAW,sC,6FCEjB,MCFMM,EAAmBC,GACzBA,EAGIA,EAAWC,MAAM,KAFjB,CAAC,GAAI,I,aCWhB,MAAMC,GAAQC,EAAAA,EAAAA,OAAK,IAAM,+BAqDzB,EAnDaC,KACX,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC7B,YAAEC,EAAW,eAAEC,GFfOC,MAC5B,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXpB,EAAS,IAAIqB,gBAAgBF,EAASG,QACtCR,EAAcS,OAAOC,YAAYxB,GAsBvC,MAAO,CAAEc,cAAaC,eArBCA,CAACU,EAAWC,KACjC,MAAMC,EAAkB,IAAKb,GACzBY,UACKC,EAAgBD,GAEzB,MAAME,EAAc,IAAA9B,QAAO+B,EAAAA,EAAAA,IAAmB,IAAKF,KAAoBF,KACnEN,EAASG,SAAWM,GACtBX,EAAS,CACPa,SAAUX,EAASW,SACnBR,OAAQM,GAEZ,EAUoCF,iBARZK,IACxB,MAAMC,EAAe,IAAKlB,UACnBkB,EAAaD,GACpBd,EAAS,CACPa,SAAUX,EAASW,SACnBR,OAAO,IAADxB,QAAM+B,EAAAA,EAAAA,IAAmBG,KAC/B,EAEoD,EEXhBhB,GAElCiB,EAAanB,EAAYoB,MAAQ,IAChCA,EAAMC,GAAS9B,EAAgB4B,GAChCX,EAASR,EAAYQ,OAErBpB,GAAiBkC,EAAAA,EAAAA,UACrB,MACEC,MAAOH,EACPI,OAAQH,EACRI,cAAejB,KAEjB,CAACa,EAAOb,IAQJkB,GAAcC,EAAAA,EAAAA,cAAY,MAC9B/C,EAAAA,EAAAA,GAAYQ,GAAgBwC,MAAMC,IAChC/B,EAAS+B,EAAIC,KAAK,GAClB,GACD,CAAC1C,IAMJ,OAJA2C,EAAAA,EAAAA,YAAU,KACRL,GAAa,GACZ,CAACA,KAGFM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEC,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oEAIhBpC,EAAMuC,OAAS,GACdD,EAAAA,EAAAA,KAACE,EAAAA,SAAQ,CAACC,UAAUH,EAAAA,EAAAA,KAACI,EAAAA,EAAM,IAAIL,UAC7BC,EAAAA,EAAAA,KAACzC,EAAK,CAAC8C,WAzBIA,KACjB,MAAMhD,EDzBoBiD,EAACC,EAAmBC,KAChD,MAAOC,EAAQC,GAAWtD,EAAgBmD,GAC1C,GAAIE,IAAWD,EAAQ,CACrB,MAAMG,EAAkB,QAAZD,EAAoB,OAAS,MACzC,MAAM,GAAN7D,OAAU2D,EAAM,KAAA3D,OAAI8D,EACtB,CACE,MAAM,GAAN9D,OAAU2D,EAAM,OAClB,ECkBqBF,CAAetB,EAAY,YAC9ClB,EAAe,CAAEmB,KAAM5B,GAAa,EAuBC6B,MAAOA,EAAOxB,MAAOA,OAGtDsC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4DAA2DC,SAAC,eAEzE,C","sources":["api/users.js","constants/api.js","hooks/useQueryParams.jsx","utils/sorting.js","pages/home/Home.jsx"],"sourcesContent":["import axios from 'axios'\nimport { BASE_URL } from '../constants/api'\nimport pickBy from 'lodash.pickby'\n\nexport const getAllUsers = async (queryVariables) => axios.get(`${BASE_URL}/users`, { params: pickBy(queryVariables) })\n\nexport const getOneUser = async (id) => axios.get(`${BASE_URL}/users/${id}`)\n","export const BASE_URL = 'https://jsonplaceholder.typicode.com'\n","import { createSearchParams, useLocation, useNavigate } from 'react-router-dom'\n\nexport const useQueryParams = () => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const params = new URLSearchParams(location.search)\n  const queryParams = Object.fromEntries(params)\n  const setQueryParams = (newParams, removeQueryParam) => {\n    const copyQueryParams = { ...queryParams }\n    if (removeQueryParam) {\n      delete copyQueryParams[removeQueryParam]\n    }\n    const searchParamStr = `?${createSearchParams({ ...copyQueryParams, ...newParams })}`\n    if (location.search !== searchParamStr) {\n      navigate({\n        pathname: location.pathname,\n        search: searchParamStr,\n      })\n    }\n  }\n  const removeQueryParam = (param) => {\n    const currentParam = { ...queryParams }\n    delete currentParam[param]\n    navigate({\n      pathname: location.pathname,\n      search: `?${createSearchParams(currentParam)}`,\n    })\n  }\n  return { queryParams, setQueryParams, removeQueryParam }\n}\n","export const parseSortString = (sortString) => {\n  if (!sortString) {\n    return ['', '']\n  } else {\n    return sortString.split('.')\n  }\n}\n\nexport const makeSortString = (currentSortString, sortBy) => {\n  const [currBy, currDir] = parseSortString(currentSortString)\n  if (currBy === sortBy) {\n    const dir = currDir === 'asc' ? 'desc' : 'asc'\n    return `${sortBy}.${dir}`\n  } else {\n    return `${sortBy}.asc`\n  }\n}\n","import React, {\n  useState,\n  useCallback,\n  useEffect,\n  useMemo,\n  Suspense,\n  lazy,\n} from 'react'\nimport { getAllUsers } from '../../api/users'\n// import Search from '../../components/Search'\nimport Loader from '../../ui-kit/components/loader/Loader'\nimport { useQueryParams } from '../../hooks/useQueryParams'\nimport { parseSortString, makeSortString } from '../../utils/sorting'\nconst Users = lazy(() => import('../../components/users/Users'))\n\nconst Home = () => {\n  const [users, setUsers] = useState([])\n  const { queryParams, setQueryParams } = useQueryParams()\n\n  const sortParams = queryParams.sort || ''\n  const [sort, order] = parseSortString(sortParams)\n  const search = queryParams.search\n\n  const queryVariables = useMemo(\n    () => ({\n      _sort: sort,\n      _order: order,\n      username_like: search,\n    }),\n    [order, search],\n  )\n\n  const handleSort = () => {\n    const sortString = makeSortString(sortParams, 'username')\n    setQueryParams({ sort: sortString })\n  }\n\n  const handleFetch = useCallback(() => {\n    getAllUsers(queryVariables).then((res) => {\n      setUsers(res.data)\n    })\n  }, [queryVariables])\n\n  useEffect(() => {\n    handleFetch()\n  }, [handleFetch])\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex flex-row align-items-center justify-content-between mb-4\">\n        <h1>List of users</h1>\n        <div className=\"d-flex flex-row align-items-center justify-content-end gap-4\">\n          {/* <Search /> */}\n        </div>\n      </div>\n      {users.length > 0 ? (\n        <Suspense fallback={<Loader />}>\n          <Users handleSort={handleSort} order={order} users={users} />\n        </Suspense>\n      ) : (\n        <div className=\"d-flex flex-row align-items-center justify-content-center\">No users</div>\n      )}\n    </div>\n  )\n}\n\nexport default Home\n"],"names":["getAllUsers","async","axios","get","concat","BASE_URL","params","pickBy","queryVariables","getOneUser","id","parseSortString","sortString","split","Users","lazy","Home","users","setUsers","useState","queryParams","setQueryParams","useQueryParams","navigate","useNavigate","location","useLocation","URLSearchParams","search","Object","fromEntries","newParams","removeQueryParam","copyQueryParams","searchParamStr","createSearchParams","pathname","param","currentParam","sortParams","sort","order","useMemo","_sort","_order","username_like","handleFetch","useCallback","then","res","data","useEffect","_jsxs","className","children","_jsx","length","Suspense","fallback","Loader","handleSort","makeSortString","currentSortString","sortBy","currBy","currDir","dir"],"sourceRoot":""}